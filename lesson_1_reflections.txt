- How did viewing a diff between two versions of a file help you see the bug that was introduced?

It was much easier than looking at the file itself. The file could be simple or could be hundreds of lines long, and then it would be just tedious to check line by line for a typo or similar. With diff it highlights what the differences are between, goes straight to the point.

- How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

You can compare files easily in case your new version doesn't work and the previous one did, or at some point you change your mind and want to go back to some old feature you would now like to implement.

- What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros: It helps saving space in your drive, as you only save when you need to. Also you make sure you save when it makes sense to do it and not in the middle of a change. It allows you to have a control of the updates adding comments in every commit.

Cons: If you suffer a loss of power, or have to go out in a rush, or the tool crashes, or you just forget! and are unable to save then all your work will be lost.

- Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

I think it is because Git was created for code writing and Google Docs wasn't.

- How can you use the commands git log and git diff to view the history of files?

After working in a file with a specific purpose (adding information, modifying a known mistake, adding new features) I would save the file and add a comment to that version so I can keep track of new issues of the file later on. Then when I want to review a specific issue it is easy to go search for that comment and retrieve the time when I modified the file for that purpose. Also when you add any change and then the file doesn't work anymore the way you want it to, this feature will make it easy to locate the change and review it.

- How might using version control make you more confident to make changes that could break something?

Knowing that you can get easily back to a previous version of your work is awesome, you will never be afraid again of overwriting something you will regret.

- Now that you have your workspace set up, what do you want to try using Git for?
It would be nice if I could track the changes I make on any code I write or project I am working on.